version: "3"

networks:
  webapp:

services:
  web:
    container_name: laravel-web
    image: nginx:1.25-alpine3.17
    volumes:
      - ./backend:/www:rw
      - ./backend/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend/docker/logs/nginx:/var/logs/nginx:rw
    depends_on:
      - app
    networks:
      - webapp

  app:
    container_name: laravel-api
    image: rcsnjszg/backend2023
    build:
      context: ./backend/docker/php
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/www:rw
    depends_on:
      db:
        condition: service_healthy
    networks:
      - webapp

  db:
    container_name: db
    image: mysql:8.0.30
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - TZ="${TZ}"
    volumes:
      - "./backend/docker/mysql/var/lib/mysql:/var/lib/mysql:rw"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - webapp

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:5.1-apache
    depends_on:
      - db
    environment:
        - PMA_ABSOLUTE_URI=http://localhost/phpmyadmin
    networks:
      - webapp

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    volumes:
      - './frontend:/frontend'
      - '/frontend/node_modules'
    networks:
      - webapp
     
  proxy:
    container_name: proxy
    image: nginx:alpine
    ports:
     - 80:80
    volumes:
     - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    networks:
     - webapp